apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "com.jaredsburrows.license"

// Only apply Google services plugins if google-services.json file exists
ext {
    googleServicesJsonFile = "google-services.json"
    googleServicesPluginsApplied = false
}
if (rootProject.file("app/$googleServicesJsonFile").exists()) {
    System.out.println("Found $googleServicesJsonFile, Google Services plugins applied")
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'
    googleServicesPluginsApplied = true
}

android {
    compileSdkVersion 29

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
    }

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 29
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        resConfigs("en", "ru", "uk")
        multiDexKeepFile file('multidex-keep.txt')

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.incremental": "true"
                ]
            }
        }

        applicationVariants.all { variant ->
            variant.getJavaCompileProvider().configure {
                it.doFirst {
                    def buildType = android.buildTypes[variant.getName()]
                    def enableAnalyticsInThisBuild =
                            buildType.buildConfigFields[ENABLE_ANALYTICS_FIELD_KEY].value == "true"
                    if (!googleServicesPluginsApplied && enableAnalyticsInThisBuild) {
                        throw new IllegalStateException("Cannot have analytics enabled while Google Services plugins are not applied.\n" +
                                "Provide '$googleServicesJsonFile' file or disable analytics in config")
                    }
                }
            }
        }
    }

    buildTypes {
        debug {
            apply from: "app_config.gradle"
            if (file("dev_app_config.gradle").exists()) {
                apply from: "dev_app_config.gradle"
            }
            applyAppConfig(android.buildTypes.debug)

            signingConfig signingConfigs.debug
            debuggable true
        }

        staging {
            apply from: "app_config.gradle"
            if (file("stage_app_config.gradle").exists()) {
                apply from: "stage_app_config.gradle"
            }
            applyAppConfig(android.buildTypes.staging)

            signingConfig signingConfigs.debug
            debuggable true
        }

        release {
            apply from: "app_config.gradle"
            if (file("release_app_config.gradle").exists()) {
                apply from: "release_app_config.gradle"
            }
            applyAppConfig(android.buildTypes.release)

            signingConfig signingConfigs.debug
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
        jumboMode true
        preDexLibraries true
    }

    licenseReport {
        generateHtmlReport = true
        generateJsonReport = false
        copyHtmlReportToAssets = true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

ext {
    anko_version = '0.10.5'
    support_lib_version = '28.0.0'
    room_version = '1.1.1'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'com.google.android.gms:play-services-base:17.4.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.material:material:1.2.1'

    implementation 'androidx.room:room-runtime:2.2.5'
    kapt 'androidx.room:room-compiler:2.2.5'

    implementation 'org.jetbrains.anko:anko-sdk15:0.9.1'
    implementation 'com.rengwuxian.materialedittext:library:2.1.4'
    implementation("com.mikepenz:materialdrawer:6.0.9@aar") { transitive = true }
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0@aar'
    implementation 'com.google.zxing:core:3.3.0'
    implementation 'me.grantland:autofittextview:0.2.1'
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'
    implementation 'org.apmem.tools:layouts:1.10@aar'

    implementation 'com.google.dagger:dagger:2.28.3'
    kapt 'com.google.dagger:dagger-compiler:2.28.3'
    compileOnly 'javax.annotation:jsr250-api:1.0'

    implementation "org.tokend:sdk:3.6.0"
    implementation "org.tokend:rx-sdk:2.4.0"

    implementation 'io.reactivex.rxjava2:rxkotlin:2.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-support-v4:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.1.1'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'
    implementation 'ru.noties:markwon:1.0.1'
    implementation 'ru.noties:markwon-image-loader:1.0.1'
    implementation 'com.google.firebase:firebase-crashlytics-ktx:17.2.1'
    implementation 'com.google.firebase:firebase-analytics:17.5.0'
    implementation 'com.github.clans:fab:1.6.4'

    testImplementation 'junit:junit:4.12'
    testImplementation 'com.marcelkliemannel:kotlin-onetimepassword:1.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
